#!/usr/bin/env bash
set -euo pipefail

# 사용법 안내 함수
usage() {
  echo "Usage: $0 {get|test} <problem_number>" >&2
  echo "  - get : BOJ에서 문제 번호의 예제 TC를 가져옵니다." >&2
  echo "  - test: TC로 basm/src/solution.rs를 테스트 합니다." >&2
  exit 1
}

# 인자 개수 확인
if [[ $# -ne 2 ]]; then
  usage
fi

# 프로젝트 루트 디렉토리
ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Rust 빌드 플래그 초기화
export RUSTFLAGS=""

# subcommand와 문제 번호 분리
cmd=$1
num=$2

case "$cmd" in
  get)
    cargo run --release \
      --manifest-path "$ROOT/basm-boj/Cargo.toml" \
      -- "$num"
    ;;
  test)
    echo "Building debug binary..."
    cargo build --manifest-path "$ROOT/Cargo.toml"

    BIN="$ROOT/target/debug/basm"
    if [[ ! -x "$BIN" ]]; then
      echo "Error: binary $BIN not found or not executable" >&2
      exit 1
    fi

    IN_DIR="$ROOT/basm/$num/input"
    OUT_DIR="$ROOT/basm/$num/output"

    echo "Test Start ---------------"
    for input_file in "$IN_DIR"/*.txt; do
      case_name=$(basename "$input_file" .txt)
      output_file="$OUT_DIR/${case_name}.txt"
      if [[ ! -f "$output_file" ]]; then
        echo "Warning: expected output file $output_file not found, skipping"
        continue
      fi

      # 실행 시간 측정 시작
      start_time=$(date +%s%3N)
      "$BIN" "$num" < "$input_file" > "/tmp/temp_${num}_${case_name}.txt"
      end_time=$(date +%s%3N)
      duration=$((end_time - start_time))

      # 결과 비교
      if diff -w "/tmp/temp_${num}_${case_name}.txt" "$output_file" >/dev/null 2>&1; then
        echo "Test ${case_name} Passed (${duration} ms)"
      else
        echo "----------------"
        echo "Test ${case_name} INPUT"
        cat "$input_file"; echo ""
        echo "----------------"
        echo "Test ${case_name} ANS"
        cat "$output_file"; echo ""
        echo "----------------"
        echo "Test ${case_name} YOURS"
        cat "/tmp/temp_${num}_${case_name}.txt"; echo ""
        echo "Test ${case_name} Failed (${duration} ms)"
      fi

      # 임시 파일 삭제(필요 시)
      # rm "/tmp/temp_${num}_${case_name}.txt"
    done
    ;;
  *)
    usage
    ;;
esac
